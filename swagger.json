{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Swagger test",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "http://localhost:3033" }],
  "tags": [
    {
      "name": "User",
      "description": "Users endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoints"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["User"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Validation error",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Validation error",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/users/logout": {
      "get": {
        "tags": ["User"],
        "summary": "User logout",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The token issued to the current user.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "400": {
            "description": "Validation error",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get information about the current user",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The token issued to the current user.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Validation error",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/users": {
      "patch": {
        "tags": ["User"],
        "summary": "Updating a user's subscription",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The token issued to the current user.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Subscription update failed.",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token.",
            "content": {}
          }
        }
      }
    },
    "/api/users/avatars": {
      "patch": {
        "tags": ["User"],
        "summary": "User avatar update",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The token issued to the current user.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvatarsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Avatars update failed.",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token.",
            "content": {}
          }
        }
      }
    },
    "/api/users/verify/:verificationToken": {
      "get": {
        "tags": ["User"],
        "summary": "User email verification",
        "parameters": [
          {
            "in": "path",
            "name": "verificationToken",
            "description": "Verification token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token.",
            "content": {}
          }
        }
      }
    },
    "/api/users/verify": {
      "post": {
        "tags": ["User"],
        "summary": "Adding a resend email to a user with a verification link",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Validation error",
            "content": {}
          }
        }
      }
    },
    "/api/users/balance": {
      "get": {
        "tags": ["User"],
        "summary": "Get user balance",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The token issued to the current user.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token.",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["User"],
        "summary": "Change user balance",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The token issued to the current user.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/users/isnotnewuser": {
      "patch": {
        "tags": ["User"],
        "summary": "Change user status",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The token issued to the current user.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsnotnewuserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/transactions": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get transactions by user",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The token issued to the current user.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Transactions"],
        "summary": "Add a transaction",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The token issued to the current user.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Transactions update failed.",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token.",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/:transactionId": {
      "delete": {
        "tags": ["Transactions"],
        "summary": "Remove a transaction",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The token issued to the current user.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "transactionId",
            "description": "Verification token",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token.",
            "content": {}
          },
          "404": {
            "description": "There is no such user collection.",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/report": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get all transactions by user",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The token issued to the current user.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "month",
            "description": "The month of the year (1-12)",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "year",
            "description": "The year (e.g. 2023)",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token.",
            "content": {}
          },
          "404": {
            "description": "There is no such transactions collection.",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "UsersRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "subscription": {
            "type": "string",
            "description": "User's subscription",
            "example": "subscription"
          }
        }
      },
      "AvatarsRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "Gift's image"
          }
        }
      },
      "VerifyRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "BalanceRequest": {
        "type": "object",
        "required": ["balance"],
        "properties": {
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": "213213213"
          }
        }
      },
      "IsnotnewuserRequest": {
        "type": "object",
        "required": ["isNotNewUser"],
        "properties": {
          "isNotNewUser": {
            "type": "boolean",
            "description": "User's status",
            "example": "213213213"
          }
        }
      },
      "TransactionsRequest": {
        "type": "object",
        "required": ["date"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Transactions date",
            "example": "25.02.2023"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
